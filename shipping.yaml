- name: Shipping Component
  hosts: shipping
  vars:
    MYSQLDB_HOST: mysql.techwithgopi.online
    password: RoboShop@1
  become: yes
  tasks:
  - name: instal maven
    ansible.builtin.dnf:
      name: maven
      state: present

  - name: create roboshop user
    ansible.builtin.user:
      name: roboshop

  - name: Recursively removing app directory
    ansible.builtin.file:
      path: /app
      state: absent

  - name: creating app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download shipping application
    ansible.builtin.get_url:
     url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
     dest: /tmp

  - name: Unzipping shipping application
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes

  - name: Installing Dependencies
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app

  - name: renaming jar file
    ansible.builtin.command:  mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app

  - name: Copying shipping service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: deamon reload # After changing service file
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: install mysql client
    ansible.builtin.dnf:
      name: mysql
      state: present

  - name: check cities schema exists or not
    ansible.builtin.command: mysql -h {{MYSQLDB_HOST}} -uroot -p{{password}} -sN -e "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'cities'"
    register: schema

  - name: print output
    ansible.builtin.debug:
      msg: "Schema Output is: {{schema}}"

  - name: Load Shipping(Cities) Data
    ansible.builtin.shell: "mysql -h {{MYSQLDB_HOST}} -uroot -p{{password}} < /app/schema/shipping.sql"
    when: schema.stdout != "1"

  - name: restart and enable shipping
    ansible.builtin.service:
      name: shipping
      state: restarted
      enabled: yes

  
